drop view ae_view ;
drop view nl_view ;
drop view nlm_view ;
drop view nlm_nl_view;
drop view nlm_nl_tree_view;
drop view nlm_ae_tree_view;
drop view nlm_combined_tree_view;

create view ae_view as
SELECT employee_id,employee_name, employee_lab,employee_division, 
employee_status,status_effective_date, network_account_id, admin 
FROM AE;

create or replace TRIGGER employee_trigger
     INSTEAD OF insert ON ae_view
     FOR EACH ROW
BEGIN
     insert into ae(
        employee_id,
        employee_name,
        employee_lab,
        employee_division,
        employee_status,
        status_effective_date,
        network_account_id,
        admin)
     VALUES (
        :new.employee_id,
        :new.employee_name,
        :new.employee_lab,
        :new.employee_division,
        :new.employee_status,
        :new.status_effective_date,
        :new.network_account_id,
        :new.admin) ;
END;
/

create view nl_view as
SELECT list_seq_id, list_name, ownership_div_code, list_description,
external_view_name, list_status, status_effective_date 
FROM nl;

create or replace TRIGGER notice_member_trigger
     INSTEAD OF insert ON nl_view
     FOR EACH ROW
BEGIN
     insert into nl(
        list_seq_id,
        list_name,
        ownership_div_code,
        list_description,
        external_view_name,
        list_status,
        status_effective_date)
     VALUES (
        :new.list_seq_id,
        :new.list_name,
        :new.ownership_div_code,
        :new.list_description,
        :new.external_view_name,
        :new.list_status,
        :new.status_effective_date) ;
END;
/

create view nlm_view as
SELECT date_added, AE_employee_id, NL_list_seq_id, NL_list_seq_id1,id
FROM nlm;

create or replace TRIGGER notice_list_member_trigger
     INSTEAD OF insert ON nlm_view
     FOR EACH ROW
BEGIN
     insert into nlm(
        date_added,
        AE_employee_id,
        NL_list_seq_id,
        NL_list_seq_id1,
        id)
     VALUES (
        :new.date_added,
        :new.AE_employee_id,
        :new.NL_list_seq_id,
        :new.NL_list_seq_id1,
        :new.id) ;
END;
/

CREATE VIEW nlm_nl_view AS 
SELECT nlm.date_added, nlm.AE_employee_id as ae_employee_id, nl.list_name, nlm.NL_list_seq_id1,
nlm.id, nlm.created as created
FROM nlm nlm, nl nl
WHERE nl.list_seq_id = nlm.NL_list_seq_id1;

/

CREATE VIEW nlm_nl_tree_view AS
SELECT nl1.list_name         as Parent_name,
       nlm.nl_list_seq_id1   as Parent_id,
       'List: ' || nl2.list_name || ' ::: Owner Div : ' || nl2.ownership_div_code         as Child_name,
       nlm.nl_list_seq_id    as Child_id,
       'yes'                 as Is_list
FROM nlm nlm
JOIN nl nl1 ON nl1.list_seq_id = nlm.nl_list_seq_id1
JOIN nl nl2 ON nl2.list_seq_id = nlm.nl_list_seq_id
WHERE nlm.nl_list_seq_id is not NULL;

/

CREATE VIEW nlm_ae_tree_view AS
SELECT nl.list_name          as Parent_name,
       nlm.nl_list_seq_id1   as Parent_id,
       'Employee : ' || ae.employee_name || ' ::: Div : ' || ae.employee_division || ' ::: Lab : ' || ae.employee_lab   as Child_name,
       nlm.ae_employee_id    as Child_id,
       'no'                  as Is_list
FROM nlm nlm
JOIN nl nl ON nl.list_seq_id = nlm.nl_list_seq_id1
JOIN ae ae ON ae.employee_id = nlm.ae_employee_id
WHERE nlm.ae_employee_id is not NULL;

/

CREATE VIEW nlm_combined_tree_view AS

SELECT * FROM nlm_nl_tree_view

UNION

SELECT * FROM nlm_ae_tree_view;

/

